<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="Button.Static.Background" Color="#1f1f1f"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#3d3d3d"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#707070"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#2e2e2e"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#707070"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#1f1f1f"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#4e4e4e"/>

    <SolidColorBrush x:Key="Label.Foreground" Color="#FFFFFF"/>
    
    <!--label-->
    <Style x:Key="{x:Type Label}"
       TargetType="Label">
        <Setter Property="HorizontalContentAlignment"
          Value="Left" />
        <Setter Property="VerticalContentAlignment"
          Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource Label.Foreground}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!--TextBlock-->
    <Style x:Key="{x:Type TextBlock}"
           TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!--StatusBar-->
    <Style x:Key="{x:Type StatusBar}"
           TargetType="StatusBar">
        <Setter Property="Background" Value="#1f1f1f"/>
    </Style>

    <!--ContextMenu-->
    <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
        <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
        <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
    </LinearGradientBrush>

    <Color x:Key="BorderMediumColor">#FF888888</Color>
    
    <Style x:Key="{x:Type ContextMenu}" TargetType="ContextMenu">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
          Value="true" />
        <Setter Property="HasDropShadow"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                Background="{StaticResource MenuPopupBrush}"
                BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                        </Border.BorderBrush>
                        <StackPanel IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                   Value="true">
                            <Setter TargetName="Border"
                    Property="Padding"
                    Value="0,3,0,3" />
                            <Setter TargetName="Border"
                    Property="CornerRadius"
                    Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>